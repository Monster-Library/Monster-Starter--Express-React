{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"onPress\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var PrimaryButton = function PrimaryButton(_ref) {\n  var children = _ref.children,\n      onPress = _ref.onPress,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(Pressable, _objectSpread(_objectSpread({\n    style: styles.primary,\n    onPress: onPress\n  }, props), {}, {\n    children: _jsx(Text, {\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["React","styles","PrimaryButton","children","onPress","props","primary"],"sources":["C:/Work/React_Native/GuessGame/client/src/components/ui/Buttons/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"./Style\";\r\n\r\ninterface Button {\r\n  onPress: () => void;\r\n  children?: any;\r\n}\r\n\r\nexport const PrimaryButton = ({ children, onPress, ...props }: Button) => {\r\n  return (\r\n    <Pressable style={styles.primary} onPress={onPress} {...props}>\r\n      <Text>{children}</Text>\r\n    </Pressable>\r\n  );\r\n};\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT;;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA6C;EAAA,IAA1CC,QAA0C,QAA1CA,QAA0C;EAAA,IAAhCC,OAAgC,QAAhCA,OAAgC;EAAA,IAApBC,KAAoB;;EACxE,OACE,KAAC,SAAD;IAAW,KAAK,EAAEJ,MAAM,CAACK,OAAzB;IAAkC,OAAO,EAAEF;EAA3C,GAAwDC,KAAxD;IAAA,UACE,KAAC,IAAD;MAAA,UAAOF;IAAP;EADF,GADF;AAKD,CANM"},"metadata":{},"sourceType":"module"}